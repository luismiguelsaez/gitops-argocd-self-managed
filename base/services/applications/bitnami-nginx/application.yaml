apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nginx
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "5"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: apps
  destination:
    namespace: apps
    server: https://kubernetes.default.svc
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
      - Validate=true
      - RespectIgnoreDifferences=true
      - ServerSideApply=false
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 5m
  source:
    chart: nginx 
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: 15.5.1
    plugin:
      env:
        - name: HELM_VALUES
          value: |-
            replicaCount: 2
            service:
              type: ClusterIP
              annotations: {}
            ingress:
              enabled: true
              ingressClassName: nginx-external
              hostname: nginx.dev.lokalise.cloud
              pathType: ImplementationSpecific
              path: /
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                    - matchExpressions:
                      - key: app
                        operator: In
                        values:
                        - nginx
            tolerations:
              - effect: NoSchedule
                key: karpenter.sh/enabled
                operator: Exists
            extraDeploy:
              - apiVersion: karpenter.sh/v1beta1
                kind: NodePool
                metadata:
                  annotations:
                    argocd.argoproj.io/sync-wave: "1"
                    argocd.argoproj.io/sync-options: Prune=true,Delete=true
                  name: nginx
                spec:
                  weight: 100
                  disruption:
                    consolidationPolicy: WhenUnderutilized
                  template:
                    metadata:
                      labels:
                        app: nginx
                        karpenter: enabled
                    spec:
                      nodeClassRef:
                        apiVersion: karpenter.k8s.aws/v1beta1
                        kind: EC2NodeClass
                        name: al2-max-conntrack
                      requirements:
                        - { key: karpenter.k8s.aws/instance-category, operator: In, values: [ t ]     }
                        - { key: kubernetes.io/arch,                  operator: In, values: [ arm64 ] }
                        - { key: kubernetes.io/os,                    operator: In, values: [ linux ] }
                        - { key: karpenter.sh/capacity-type,          operator: In, values: [ spot ]  }
                      taints:
                        - key: karpenter.sh/enabled
                          value: 'true'
                          effect: NoSchedule
