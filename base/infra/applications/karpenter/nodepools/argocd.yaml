apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/sync-options: Prune=true,Delete=true
  name: argocd
spec:
  weight: 100
  disruption:
    consolidationPolicy: WhenUnderutilized
  template:
    metadata:
      labels:
        app: argocd
        karpenter: enabled
    spec:
      nodeClassRef:
        apiVersion: karpenter.k8s.aws/v1beta1
        kind: EC2NodeClass
        name: bottlerocket-default
      requirements:
        - { key: karpenter.k8s.aws/instance-category, operator: In, values: [ t ]     }
        - { key: kubernetes.io/arch,                  operator: In, values: [ arm64 ] }
        - { key: kubernetes.io/os,                    operator: In, values: [ linux ] }
        - { key: karpenter.sh/capacity-type,          operator: In, values: [ spot ]  }
      taints:
        - key: karpenter
          value: enabled
          effect: NoSchedule
---
apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/sync-options: Prune=true,Delete=true
  name: redis
spec:
  weight: 100
  disruption:
    consolidationPolicy: WhenUnderutilized
  template:
    metadata:
      labels:
        app: redis
        karpenter: enabled
    spec:
      nodeClassRef:
        apiVersion: karpenter.k8s.aws/v1beta1
        kind: EC2NodeClass
        name: bottlerocket-default
      requirements:
        - { key: karpenter.k8s.aws/instance-category, operator: In, values: [ t ]     }
        - { key: kubernetes.io/arch,                  operator: In, values: [ arm64 ] }
        - { key: kubernetes.io/os,                    operator: In, values: [ linux ] }
        - { key: karpenter.sh/capacity-type,          operator: In, values: [ spot ]  }
      taints:
        - key: karpenter
          value: enabled
          effect: NoSchedule
