apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  #finalizers:
  #  - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/sync-options: Prune=true
  name: al2023-default
spec:
  amiFamily: AL2023
  blockDeviceMappings:
  - deviceName: /dev/xvda
    ebs:
      encrypted: true
      volumeSize: 20Gi
      volumeType: gp3
  instanceProfile: KarpenterNodeRole-main
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2
    httpTokens: required
  securityGroupSelector:
    #aws-ids: <path:/eks/cluster/main/details#security_group#AWSCURRENT>
    aws:eks:cluster-name: <path:/eks/cluster/main/details#name#AWSCURRENT>
    #karpenter.sh/discovery: <path:/eks/cluster/main/details#name#AWSCURRENT>
    #kubernetes.io/cluster/<path:/eks/cluster/main/details#name#AWSCURRENT>: owned
  subnetSelector:
    karpenter.sh/discovery: <path:/eks/cluster/main/details#name#AWSCURRENT>
  # https://karpenter.sh/docs/concepts/nodeclasses/#al2023
  #userData: |
  #  MIME-Version: 1.0
  #  Content-Type: multipart/mixed; boundary="//"
#
  #  --//
  #  Content-Type: application/node.eks.aws
#
  #  # Karpenter Generated NodeConfig
  #  apiVersion: node.eks.aws/v1alpha1
  #  kind: NodeConfig
  #  spec:
  #    cluster:
  #      name: <path:/eks/cluster/main/details#name#AWSCURRENT>
  #      apiServerEndpoint: <path:/eks/cluster/main/details#endpoint#AWSCURRENT>
  #      certificateAuthority: <path:/eks/cluster/main/details#ca_data#AWSCURRENT>
  #      #cidr: 10.100.0.0/16
  #    kubelet:
  #      config:
  #        maxPods: 110
  #  --//--
