apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kubecost
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: system
  destination:
    namespace: cloud-controllers
    server: https://kubernetes.default.svc
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
      - Validate=true
      - RespectIgnoreDifferences=true
      - ServerSideApply=false
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 5m
  source:
    chart: cost-analyzer
    repoURL: https://kubecost.github.io/cost-analyzer
    targetRevision: 2.1.1
    helm:
      releaseName: kubecost
      values: |
        kubecostToken: bHVpc21pZ3VlbHNhZXo4M0BnbWFpbC5jb20=xm343yadf98

        global:
          prometheus:
            enabled: true
          grafana:
            enabled: false
            proxy: false

        pricingCsv:
          enabled: false
          location:
            provider: "AWS"
            region: "us-east-1"
            URI: s3://kc-csv-test/pricing_schema.csv # a valid file URI
            csvAccessCredentials: pricing-schema-access-secret

        kubecostFrontend:
          image: public.ecr.aws/kubecost/frontend
          imagePullPolicy: Always
          resources:
            requests:
              cpu: "10m"
              memory: "55Mi"


        saml:
          enabled: false
        oidc:
          enabled: false
        ingress:
          enabled: false
          # className: nginx
          labels:
            # kubernetes.io/ingress.class: nginx
            # kubernetes.io/tls-acme: "true"
          annotations:
            # kubernetes.io/ingress.class: nginx
            # kubernetes.io/tls-acme: "true"
          paths: ["/"]  # There's no need to route specifically to the pods-- we have an nginx deployed that handles routing
          pathType: ImplementationSpecific
          hosts:
            - cost-analyzer.local
          tls: []
          #  - secretName: cost-analyzer-tls
          #    hosts:
          #      - cost-analyzer.local
        nodeSelector:
          role: system

        # https://docs.aws.amazon.com/eks/latest/userguide/cost-monitoring.html
        #   https://raw.githubusercontent.com/kubecost/cost-analyzer-helm-chart/develop/cost-analyzer/values-eks-cost-monitoring.yaml
        kubecostModel:
          image: public.ecr.aws/kubecost/cost-model
          imagePullPolicy: Always
          warmCache: true
          etl: true
          # The total number of days the ETL pipelines will build
          # Set to 0 to disable daily ETL (not recommended)
          etlDailyStoreDurationDays: 120
          maxQueryConcurrency: 5
          # utcOffset represents a timezone in hours and minutes east (+) or west (-)
          # of UTC, itself, which is defined as +00:00.
          # See the tz database of timezones to look up your local UTC offset:
          # https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
          utcOffset: "+00:00"
          resources:
            requests:
              cpu: "200m"
              memory: "55Mi"
            #limits:
            #  cpu: "800m"
            #  memory: "256Mi"