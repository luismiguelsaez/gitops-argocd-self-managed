apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  name: al2-default
spec:
  amiFamily: AL2
  blockDeviceMappings:
  - deviceName: /dev/xvda
    ebs:
      encrypted: true
      volumeSize: 20Gi
      volumeType: gp3
  instanceProfile: KarpenterNodeRole-main
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2
    httpTokens: required
  securityGroupSelector:
    #aws-ids: <path:/eks/cluster/main/data-2/details#name#AWSCURRENT>
    #aws:eks:cluster-name: <path:/eks/cluster/main/data-2/details#name#AWSCURRENT>
    #karpenter.sh/discovery: <path:/eks/cluster/main/data-2/details#name#AWSCURRENT>
    #kubernetes.io/cluster/<path:/eks/cluster/main/data-2/details#name#AWSCURRENT>: owned
  subnetSelector:
    karpenter.sh/discovery: <path:/eks/cluster/main/data-2/details#name#AWSCURRENT>
  userData: |
    MIME-Version: 1.0
    Content-Type: multipart/mixed; boundary="BOUNDARY"

    --BOUNDARY
    Content-Type: text/x-shellscript; charset="us-ascii"

    #!/bin/bash
    [ ! -d /home/ec2-user/.ssh ] && mkdir -p /home/ec2-user/.ssh
    chmod 0700 /home/ec2-user/.ssh
    echo "<path:/eks/cluster/main/data-2/details#ssh_public_key#AWSCURRENT>" >> /home/ec2-user/.ssh/authorized_keys
    chmod 0600 /home/ec2-user/.ssh/authorized_keys
    chown -R ec2-user.ec2-user /home/ec2-user

    --BOUNDARY--
